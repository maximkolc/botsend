# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-10 22:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chanels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chanelname', models.CharField(help_text='Имя канала', max_length=25, unique=True)),
                ('description', models.CharField(help_text='Описание', max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='MyBot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('botname', models.CharField(help_text='Имя бота', max_length=120, unique=True)),
                ('bottoken', models.CharField(help_text='Токен бота', max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourcesData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sourcename', models.CharField(help_text='Произвольное имя источника', max_length=25, unique=True, verbose_name='Имя')),
                ('password', models.CharField(help_text='Пароль от яндекс диска', max_length=120, verbose_name='Пароль')),
                ('login', models.CharField(help_text='Логин от яндекс диска', max_length=120, verbose_name='Логин')),
                ('urls', models.CharField(help_text='Адрес WebDav сервера', max_length=120, verbose_name='Сервер')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskname', models.CharField(max_length=25, unique=True, verbose_name='Имя задачи')),
                ('momentforwork', models.DateTimeField(help_text='Время публикации, ЧЧ:ММ:СС', max_length=25, verbose_name='Время')),
                ('filetypesforload', models.CharField(choices=[('GIF', 'Гифки'), ('TXT', 'Тескс Markdown'), ('PNG', 'Картинки')], default='GIF', max_length=3, verbose_name='Тип ресурсов')),
                ('reactioan', models.CharField(choices=[('yes', 'Да'), ('no', 'Нет')], default='yes', max_length=3, verbose_name='Наличие реакций')),
                ('numfileforpub', models.IntegerField(verbose_name='Количесто публикуемых файлов')),
                ('caption', models.CharField(max_length=120, verbose_name='Подпись')),
                ('periodpublic', models.CharField(choices=[('one', 'один раз'), ('one_day', 'один раз в день'), ('one_monday', 'один раз в неделю')], default='one', max_length=25, verbose_name='Периодичность')),
                ('bottoken', models.ForeignKey(help_text='Бот для выполнения задачи', null=True, on_delete=django.db.models.deletion.SET_NULL, to='facebot.MyBot')),
                ('chanelforpublic', models.ForeignKey(help_text='Канал для публикации', null=True, on_delete=django.db.models.deletion.SET_NULL, to='facebot.Chanels')),
                ('sourcefordownload', models.ForeignKey(help_text='Источник данных для задачи', null=True, on_delete=django.db.models.deletion.SET_NULL, to='facebot.SourcesData')),
            ],
            options={
                'ordering': ['momentforwork'],
            },
        ),
        migrations.CreateModel(
            name='Urls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlname', models.CharField(help_text='Имя ссылки', max_length=120, unique=True)),
                ('url', models.URLField(help_text='url адресс ссылки', max_length=120)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='url',
            field=models.ManyToManyField(help_text='Исрользовать ссылки', to='facebot.Urls'),
        ),
    ]
